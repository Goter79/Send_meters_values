from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
# from telebot.types import types
from config import TOKEN;
# –ó–∞–º–µ–Ω–∏—Ç–µ TOKEN –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = TeleBot(TOKEN)

Meter=[1,1,1,'1111111', '—Ö–≤—Å', '344232', 111, 112]
@bot.message_handler(commands=['start'])
def start(message,previous_message=None):

                                
                                text =  f'<code>–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç:       </code><b>{Meter[3]}</b>\n\n' \
                                        f'<code>–£–ª—É–≥–∞:              </code><b>{Meter[4]}</b>\n' \
                                        f'<code>–ù–æ–º–µ—Ä –ò–ü–£:          </code><b>{Meter[5]}</b>\n' \
                                        f'<code>–ü—Ä–µ–¥-—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è: </code><b>{str(Meter[6])}</b>\n' \
                                        f'<code>–¢–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è:  </code><b>{str(Meter[7])}</b>', 
                                bot.send_message(chat_id=message.chat.id, text=text, parse_mode='HTML')

                                # bot.send_message(chat_id=message.chat.id, text='__–ù–∏–∂–Ω–µ–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ__', parse_mode='MarkdownV2')
                                # # text="*bold* _italic_ `fixed width font` [link](http://google.com)\.", 
                                # markdown =  f'–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç:               *{Meter[5]}*\n\n' \
                                #             f'–£—Å–ª—É–≥–∞:                     *{Meter[5]}*\n' \
                                #             f'–ù–æ–º–µ—Ä –ò–ü–£:                  *{Meter[5]}*\n' \
                                #             f'–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è:       *{str(Meter[6])}*\n'
                                
                                # bot.send_message(chat_id=message.chat.id, text=markdown, parse_mode="MarkdownV2")
    

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/pre"

@bot.message_handler(commands=['pre'])
def process_pre_command(message):

        text='``` –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç```\n'
        bot.send_message(chat_id=message.chat.id, text=text, parse_mode="MarkdownV2")             
    
    # text = "–õ–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü:\n" + \
    #     "  * –ü—É–Ω–∫—Ç 1\n" + \
    #     "  * –ü—É–Ω–∫—Ç 2\n\n" + \
    #     "–ü—Ä–∞–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü:\n" + \
    #     "  * –ü—É–Ω–∫—Ç 3\n" + \
    #     "  * –ü—É–Ω–∫—Ç 4"

    # bot.send_message(chat_id=message.chat.id, text=text, parse_mode='Markdown')

    # markup = InlineKeyboardMarkup()
    # btn1 = InlineKeyboardButton("<b>–ö–Ω–æ–ø–∫–∞ 1</b>", callback_data='btn1')
    # btn2 = InlineKeyboardButton("<i>–ö–Ω–æ–ø–∫–∞ 2</i>", callback_data='btn2')
    # key_b = InlineKeyboardButton(text='1123 üëå', callback_data='1123')    
    # markup.add(btn1, btn2, key_b)
    # bot.send_message(message.chat.id, format_text( mbold('Hello'),    mitalic('World')), reply_markup=markup, parse_mode="HTML")



@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.data == 'btn1':
        bot.answer_callback_query(call.id, "–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ 1")
    elif call.data == 'btn2':
        bot.answer_callback_query(call.id, "–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ 2")

    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–Ω–æ–ø–∫–∞ 222", callback_data="but_222"))
    markup.add(InlineKeyboardButton("<b>–ö–Ω–æ–ø–∫–∞ 1</b>", callback_data='btn4'))
    markup.add(InlineKeyboardButton("<b>–ö–Ω–æ–ø–∫–∞ 1</b>", callback_data='btn3'))
    bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.id, reply_markup=markup)        

    # start(call.message, previous_message=call.message)

bot.infinity_polling()

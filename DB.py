# –ø–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º–∞
import telebot
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
# –º–æ–¥—É–ª—å —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
from datetime import datetime, timezone, timedelta
# –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
import sqlite3 as sl
from config import TOKEN;
import os #–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å "os"

bot = telebot.TeleBot(TOKEN);


# —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É
bot = telebot.TeleBot(TOKEN)

# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
start_txt = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –û–û–û –ì–£–ö-–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä. \n\n –¢—É—Ç –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è –ø–æ —Å–≤–æ–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø—Ä–∏–±–æ—Ä–∞–º —É—á–µ—Ç–∞'

# –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ñ–∞–π–ª—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
con = sl.connect('reports.db')

# –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
with con:
    # –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü —Å –Ω—É–∂–Ω—ã–º –Ω–∞–º –∏–º–µ–Ω–µ–º
    data = con.execute("select count(*) from sqlite_master where type='table' and name='Meter_Measure'")
    for row in data:
        # –µ—Å–ª–∏ —Ç–∞–∫–∏—Ö —Ç–∞–±–ª–∏—Ü –Ω–µ—Ç
        if row[0] == 0:
            # —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
            with con:
                con.execute("""
                    CREATE TABLE Meter_Measure (
                        id_meter BIGINT PRIMARY KEY,
                        LS VARCHAR(9),
                        Service VARCHAR(20),
                        Number VARCHAR(20),
                        value float,
                        value_old float,
                        LastUpdate VARCHAR(40),
                        id_user VARCHAR(200)
                    );
                """)

# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def start(message):
    #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏—Ç—É—Ä—ã
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True).add(
        "–ü–æ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è", "–ü–æ–º–æ—â—å", "üëÄ –ù–∞—à –∫–∞–Ω–∞–ª")
    bot.send_message(message.chat.id, start_txt, reply_markup=markup_reply)

    # –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    #bot.send_message(message.from_user.id, start_txt, parse_mode='Markdown')
    

# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /ListIPU, –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤
@bot.message_handler(commands=['Key'])
def Keybord(message):
	markup_inline = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton(text='üì±–ö—É–ø–∏—Ç—å –Ω–æ–º–µ—Ä', callback_data='buynumber'),
        types.InlineKeyboardButton(text='üí∞–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance')).add(
        types.InlineKeyboardButton(text='üåéC—Ç—Ä–∞–Ω–∞/–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='country'),
        types.InlineKeyboardButton(text='üéâ–ú—É–ª—å—Ç–∏—Å–µ—Ä–≤–∏—Å', callback_data='myltis')).add(
        types.InlineKeyboardButton(text='üìö–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', callback_data='history')).add(
        types.InlineKeyboardButton(text='üéÉ–ü—Ä–æ—Ñ–∏–ª—å', callback_data='prof'))	
	bot.send_message(
        message.chat.id,
        '–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ',
        reply_markup=markup_inline)
    

# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /ListIPU, –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤
@bot.message_handler(commands=['List_IPU'])
def List_IPU(message):
    bot.send_message(message.from_user.id, '–°–ø–∏—Å–æ–∫ –ò–ü–£')
    # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    con = sl.connect('reports.db')   
    
    # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    s = ''
    sql="SELECT id_meter, LS, Number, value, value_old  FROM Meter_Measure"
    print(sql)
     # —Ä–∞–±–æ—Ç–∞–µ–º —Å –±–∞–∑–æ–π
     
    with con:
        # –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ
        data = con.execute(sql).fetchall()
        # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        
        for row in data:
            # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—â–µ–º –æ—Ç—á—ë—Ç–µ
             s += "id_meter:           {0}\n–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç: {1}\n–ù–æ–º–µ—Ä –ò–ü–£:      {2}\n–¢–µ–∫.–ø–æ–∫–∞–∑-—è:    {3}\n–ü—Ä–µ–¥.–ø–æ–∫–∞–∑-—è: {4}\n\n".format(row[0], row[1], row[2], row[3], row[4])
             
            
    # –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
    if s == '':
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        s = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–∏–π –æ—Ç—á—ë—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    #bot.send_message(message.from_user.id, s, parse_mode='Markdown')
    bot.send_message(message.from_user.id, s)
    con.close()
    
# —Å–ø–∏—Å–æ–∫ –ò–ü–£ –ø–æ –õ–°
def Find_LS(message):
	if message.text.isdigit():
		#bot.send_message(message.from_user.id, "–°–ø–∏—Å–æ–∫ –ò–ü–£ –ø–æ –õ–°:"+message.text)
		# –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
		con = sl.connect('reports.db')   

		keyboard = types.InlineKeyboardMarkup() #–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
		# keyboard.row_width = 2	
		# –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
		s = ''
		LS=str(message.text) 
		sql="SELECT id_meter, LS, Number, value, value_old  FROM Meter_Measure Where LS='"+LS+"'"
		print(sql)
		# —Ä–∞–±–æ—Ç–∞–µ–º —Å –±–∞–∑–æ–π
		with con:
			# –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ
			data = con.execute(sql).fetchall()
			for row in data:
				# —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—â–µ–º –æ—Ç—á—ë—Ç–µ
				s += "id_meter:           {0}\n–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç: {1}\n–ù–æ–º–µ—Ä –ò–ü–£:      {2}\n–¢–µ–∫.–ø–æ–∫–∞–∑-—è:    {3}\n–ü—Ä–µ–¥.–ø–æ–∫–∞–∑-—è: {4}\n\n".format(row[0], row[1], row[2], row[3], row[4])
				#keyboard.add(InlineKeyboardButton(text=row[2], callback_data=row[2]))
				button=InlineKeyboardButton(text=row[2], callback_data=row[2])
				keyboard.add(button)
						
		# –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
		if s == '':
			# —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			s = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
		# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–∏–π –æ—Ç—á—ë—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
		
		bot.send_message(message.from_user.id, text="–°–ø–∏—Å–æ–∫ –ò–ü–£ –ø–æ –õ–°: "+message.text, reply_markup = keyboard)
		con.close()
	else:
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ 9 —Ü–∏—Ñ—Ä')
		bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞")
		bot.register_next_step_handler(message,Find_LS)
    

# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /Add_IPU, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –ë–î
@bot.message_handler(commands=['Add_IPU'])
def Add_IPU(message):
    # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    con = sl.connect('reports.db')
    # –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
    sql = 'INSERT INTO Meter_Measure (id_meter, LS, Service, Number, value, LastUpdate, id_user) values(?, ?, ?, ?, ?, ?, ?)'
    # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    now = datetime.now(timezone.utc)
    
    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    data = [
        (307130, '060076180', '–•–í–°', '200148346', 115, str(now), str(message.from_user.username))
    ]
    # –¥–æ–±–∞–≤–ª—è–µ–º —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã–µ
    with con:
        con.executemany(sql, data)
        con.commit()
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ—Ç—á—ë—Ç –ø—Ä–∏–Ω—è—Ç
    bot.send_message(message.from_user.id, '–ü—Ä–∏–Ω—è—Ç–æ, —Å–ø–∞—Å–∏–±–æ!', parse_mode='Markdown')

# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á—Ç–æ –ø–∏—à–µ—Ç —á–µ–ª
@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == '–ü–æ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞");
        bot.register_next_step_handler(message,Find_LS)
    else:
        bot.send_message(message.from_user.id, "–í—ã–±–∏—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É");

def get_LS(message): #–∏—â–µ–º –õ–°
    
    LS = message.text;
    #—Ç—É—Ç –∏—â–µ–º –ª—Å –∏ –≤—ã–≤–æ–¥–∏–º –≤—Å–µ –ò–ü–£
    bot.send_message(message.from_user.id, "–í—ã–±–∏—Ä–∏—Ç–µ –í–∞—à —Å—á–µ—Ç—á–∏–∫");
    bot.register_next_step_handler(message, get_IPU);

def get_IPU(message): #–í—ã–≤–æ–¥–∏–º —Å—á–µ—Ç—á–∏–∫
    
    IPU = message.text;
    bot.send_message(message.from_user.id, "–î–∞–ª—å—à–µ");
    #bot.register_next_step_handler(message, get_sname);

''' 
# –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
@bot.message_handler(commands=["restart"]) #–≤—ã–∑–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ /restart; –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
def restart(message):
	pid = str(os.getpid()) #–ø–æ–ª—É—á–∞–µ–º ProcessID –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
	restarter = open('restarter.bat', 'w') #–æ—Ç–∫—Ä—ã–≤–∞–µ–º/—Å–æ–∑–¥–∞–µ–º –±–∞—Ç–Ω–∏–∫
	restarter.write('Taskkill /PID ' + pid + ' /F\nTIMEOUT /T 5 /NOBREAK\n cd D:\\WORK\\Telegramm \n D: \n python DB.py') #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ –±–∞—Ç–Ω–∏–∫		
	restarter.close() #–∑–∞–∫—Ä—ã–≤–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞—Ç–Ω–∏–∫
	os.system('D:\\WORK\\Telegramm\\restarter.bat') #–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à –±–∞—Ç–Ω–∏–∫
'''
# –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == '__main__':
    while True:
        # –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–ø—Ä–∞—à–∏–≤–∞–µ–º –±–æ—Ç–∞ ‚Äî –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            bot.polling(none_stop=True, interval=0)
        # –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî —Å–æ–æ–±—â–∞–µ–º –ø—Ä–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        except Exception as e: 
            print('‚ùå‚ùå‚ùå‚ùå‚ùå –°—Ä–∞–±–æ—Ç–∞–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ! ‚ùå‚ùå‚ùå‚ùå‚ùå'+e)
